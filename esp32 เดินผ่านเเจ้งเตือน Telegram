#include <WiFi.h>  // ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô WiFi ‡∏Å‡∏±‡∏ö ESP32
#include <HTTPClient.h> // ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö HTTP Request (‡∏™‡πà‡∏á‡πÑ‡∏õ Telegram)

const char* ssid = "Name WiFi";
const char* password = "Password WiFi";

const long gmtOffset_sec = 7 * 3600; // GMT+7 (‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡πÑ‡∏ó‡∏¢)
const int daylightOffset_sec = 0; // ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏≠‡∏≠‡∏°‡πÅ‡∏™‡∏á

String botToken = "Bot Token Telegram";
String chatID = "Chat ID";

const int pirPin = 23; // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡∏≤ PIR ‚Üí ‡∏ï‡πà‡∏≠‡∏ó‡∏µ‡πà‡∏Ç‡∏≤ GPIO23
bool motionDetected = false; // ‡πÉ‡∏ä‡πâ‡πÄ‡∏Å‡πá‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ß‡πà‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡∏Ñ‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÑ‡∏´‡∏°
unsigned long startTime = 0; // ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡∏£‡∏ß‡∏à‡πÄ‡∏à‡∏≠‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏ß

String getCurrentTime() {  //‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏ß‡∏±‡∏ô‡πÄ‡∏ß‡∏•‡∏≤
  struct tm timeinfo;
  if (!getLocalTime(&timeinfo)) return "TIME_ERROR";

  char buffer[32];
  strftime(buffer, sizeof(buffer), "%Y-%m-%d %H:%M:%S", &timeinfo);
  return String(buffer);
}

void setup() {
  Serial.begin(115200); // ‡πÄ‡∏õ‡∏¥‡∏î Serial Monitor ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß 115200
  pinMode(pirPin, INPUT); // ‡∏ï‡∏±‡πâ‡∏á‡∏Ç‡∏≤ PIR ‡πÄ‡∏õ‡πá‡∏ô input
  

  WiFi.begin(ssid, password); // ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏° WiFi
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("\nWiFi connected");
  configTime(gmtOffset_sec, daylightOffset_sec, "pool.ntp.org"); // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏ß‡∏•‡∏≤
}

void loop() {
  int sensorState = digitalRead(pirPin); // ‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡πà‡∏≤‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á‡πÄ‡∏ã‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå PIR
  String now = getCurrentTime(); // ‡∏î‡∏∂‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô

  if (sensorState == HIGH && !motionDetected) {
    // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏à‡∏≠‡∏Ñ‡∏ô
    motionDetected = true;
    startTime = millis();
    Serial.println("‡∏ï‡∏£‡∏ß‡∏à‡∏û‡∏ö‡∏Ñ‡∏ô!");
  }

  if (sensorState == LOW && motionDetected) {
    // ‡∏Ñ‡∏ô‡πÄ‡∏î‡∏¥‡∏ô‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ ‚Üí ‡∏à‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤
    motionDetected = false;
    unsigned long endTime = millis();
    unsigned long duration = (endTime - startTime) / 1000; // ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ

    String message = "üö® ‡∏°‡∏µ‡∏Ñ‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏Å‡∏•‡πâ‡πÄ‡∏ã‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏ô‡∏≤‡∏ô " + String(duration) + " ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ" + " ‡∏ì ‡πÄ‡∏ß‡∏•‡∏≤:"+String(now); // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ Telegram
    sendTelegramMessage(message);
    Serial.println(message);
  }

  delay(100);
  Serial.println(sensorState);
}

void sendTelegramMessage(String message) {
  if (WiFi.status() == WL_CONNECTED) {
    HTTPClient http;
    String url = "https://api.telegram.org/bot" + botToken + "/sendMessage?chat_id=" + chatID + "&text=" + message;

    http.begin(url); // ‡πÄ‡∏£‡∏¥‡πà‡∏° HTTP GET
    int httpCode = http.GET(); // ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠

    if (httpCode > 0) {
      Serial.println("‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
    } else {
      Serial.printf("‡∏™‡πà‡∏á‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: %s\n", http.errorToString(httpCode).c_str());
    }

    http.end(); // ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠
  }
}
